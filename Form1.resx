<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>